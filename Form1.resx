<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>